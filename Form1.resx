<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>